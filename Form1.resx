<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>